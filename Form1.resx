<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>